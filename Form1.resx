<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>